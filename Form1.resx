<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>